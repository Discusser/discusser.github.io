#!/bin/bash

NO_TURBO_DIR="/sys/devices/system/cpu/intel_pstate/no_turbo"
accepted_apps=()
can_disable_turbo_boost=true

echo_turbo_boost() {
	if [ $(get_turbo_boost) = 0 ]
	then
		echo "Turbo boost: OFF"
	elif [ $(get_turbo_boost) = 1 ]
	then
		echo "Turbo boost: ON"
	fi
}

# if $(cat $NO_TURBO_DIR) returns 0, turbo is enabled, elif 1, disabled
get_turbo_boost() { # Return if turbo boost is enabled or not
	local no_turbo=$(cat $NO_TURBO_DIR)
	if [ $no_turbo = 0 ]
	then
		echo 1
	elif [ $no_turbo = 1 ]
	then
		echo 0
	else
		echo "cpufreqctl --no-turbo returned a value that isn't 0 or 1"
	fi
}

set_turbo_boost() { # Set turbo boost state, args can be 0 or 1
	if [ $1 = 0 ]
	then
		$(echo 1 | tee $NO_TURBO_DIR > /dev/null)
	elif [ $1 = 1 ]
	then
		$(echo 0 | tee $NO_TURBO_DIR > /dev/null)
	else
		echo "Invalid argument for set_turbo_boost: $1, should be 0 or 1"
	fi
	echo_turbo_boost
}

check_for_accepted_app() { # If accepted app is found, toggle turbo boost, else, disable
	can_disable_turbo_boost=true
	for i in ${accepted_apps[@]}
	do
		if ps -C $i > /dev/null
		then
			can_disable_turbo_boost=false
			if [ $(get_turbo_boost) = 0 ]
			then
				echo "$i has been found, activating turbo boost"
				set_turbo_boost 1
			fi
			break
		fi
	done
	if [ $can_disable_turbo_boost = true ] && [ $(get_turbo_boost) = 1 ]
	then
		echo "No accepted app found, disabling turbo boost"
		set_turbo_boost 0
	fi
}

main_loop() { # Check for accepted apps every 5 seconds
	while :
	do
		# Update accepted apps so that the user doesn't have to restart the computer
		accepted_apps=()
		while read -r line
		do
			accepted_apps+="$line "
		done < "/opt/turbo_boost/accepted_apps"
		check_for_accepted_app
		sleep 5
	done
}

main() {
	echo_turbo_boost
	main_loop
}

main
